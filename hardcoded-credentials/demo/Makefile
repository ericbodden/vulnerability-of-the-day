# Copyright 2012 Andrew Meneely. 
# Licensed under the Educational Community License, Version 2.0 (the "License"); 
# you may not use this file except in compliance with the License. 
# You may obtain a copy of the License at http://www.osedu.org/licenses/ECL-2.0. 
# Unless required by applicable law or agreed to in writing, 
# software distributed under the License is distributed on an "AS IS" BASIS, 
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
# See the License for the specific language governing permissions 
# and limitations under the License.

# Despite it being trivial in implementation and exploit, this one comes up a lot...
#
# Don't hardcode passwords!
#
# Even with obfuscation, you can always reverse engineer hardcoded keys. i
# Reversing takes some skill, and a lot of time, but crowds have both of those.
#
# While this example looks for "sesquipedalian", you can also use a reverse
# engineering tool to determine any hardcoded strings, and try those as passwords

exploit: compile
	@echo "\n****** Grep for the secret ******"
	grep "sesquipedalian" Secret.class
	@echo "\n****** Disassemble *******"
	javap -c Secret | grep String
	
compile:
	javac *.java