// Copyright 2012 Andrew Meneely. 
// Licensed under the Educational Community License, Version 2.0 (the "License"); 
// you may not use this file except in compliance with the License. 
// You may obtain a copy of the License at http://www.osedu.org/licenses/ECL-2.0. 
// Unless required by applicable law or agreed to in writing, 
// software distributed under the License is distributed on an "AS IS" BASIS, 
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. 
// See the License for the specific language governing permissions 
// and limitations under the License.

import java.io.File;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;

/**
 * This class reads an untrusted XML input and prints out the top-level node
 * 
 * Sadly, embedding a Document Type Definition in an XML 
 * allows users to access the file system, or even remote code. 
 * If the system is not configured to limit the entities, 
 * then a DoS is possible (aka an 'XML bomb') is also possible.
 * 
 * @author Andy Meneely
 * 
 */
public class ReadXML {
	public static void main(String args[]) throws Exception {
		DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
		// Sadly, these two often dont' work
		// factory.setValidating(false);
		// factory.setExpandEntityReferences(false);
		// Making this safe requires overriding the entity resolver 
		// and throwing an exception.
		DocumentBuilder builder = factory.newDocumentBuilder();
		/*
		 * builder.setEntityResolver(new EntityResolver() {
		 * 
		 * @Override public InputSource resolveEntity(String publicId, String systemId) 
		 * throws SAXException, IOException { 
		 * System.out.println("Resolving: " + publicId + ", " + systemId); 
		 * throw new SAXException(new IllegalArgumentException(
		 *		"No expanding entities for you!"));}});
		 */
		Document doc = builder.parse(new File(args[0]));
		System.out.println("The root element <"
				+ doc.getDocumentElement().getNodeName() + "> is "
				+ doc.getDocumentElement().getTextContent());
	}
}
